{"version":3,"file":"wallet.js","sources":["../../../../../../.__rollup-plugin-rust__rust_frontend/snippets/rust-frontend-edefcc6df84c92d1/js/wallet.js"],"sourcesContent":["import Onboard from \"/node_modules/@web3-onboard/core\";\nimport walletConnectModule from \"/node_modules/@web3-onboard/walletconnect\";\n\nlet onboard;\nconst MUMBAI_RPC_URL = `${window.process.env.POLYGON_TEST_URL}/${process.env.POLYGON_MATICVIGIL_API_KEY}`;\nconst walletConnect = walletConnectModule();\n\nexport function _init() {\n    console.log(\"Hello, World!!\")\n    onboard = Onboard({\n        wallets: [walletConnect],\n        chains: [\n            {\n                id: \"0x13881\",\n                token: \"MATIC\",\n                namespace: \"evm\",\n                label: \"Polygon Mumbai Testnet\",\n                rpcUrl: MUMBAI_RPC_URL,\n            },\n            {\n                id: \"0x89\",\n                token: \"MATIC\",\n                namespace: \"evm\",\n                label: \"Polygon Mainnet\",\n                rpcUrl: POLYGON_RPC_URL,\n            },\n        ],\n        appMetadata: {\n            name: \"halalanft\",\n            icon: \"https://upload.wikimedia.org/wikipedia/commons/a/a7/React-icon.svg\",\n            logo: \"https://upload.wikimedia.org/wikipedia/commons/a/a7/React-icon.svg\",\n            description: \"My app using Onboard\",\n            // recommendedInjectedWallets: [\n            //   { name: \"MetaMask\", url: \"https://metamask.io\" },\n            // ],\n        },\n    })\n}\n\n// export async function _requestAccount() {\n//     await window.ethereum.request({ method: 'eth_requestAccounts' });\n// }\n\nexport async function _connect() {\n    const connectedWallet = await onboard.connectWallet();\n    console.log(connectedWallet)\n    // const { accounts, chains, provider } = wallets[0];\n    // const providerEthers = new ethers.providers.Web3Provider(provider);\n    // const signer = providerEthers.getSigner();\n    // onboard = { providerEthers, signer, accounts, chains };\n    return JSON.stringify(connectedWallet)\n}\n\n\nexport function _myAddress() {\n    return onboard.accounts[0].address\n}\n\n// export async function _detectMetamask() {\n//     const ethereumProvider = await detectEthereumProvider();\n//     if (ethereumProvider) {\n//         return true;\n//     }\n//     return false;\n// }\n"],"names":[],"mappings":";;;;;;AAGA,IAAI,OAAO,CAAC;AACZ,MAAM,cAAc,GAAG,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC,CAAC;AAC1G,MAAM,aAAa,GAAG,mBAAmB,EAAE,CAAC;AAC5C;AACO,SAAS,KAAK,GAAG;AACxB,IAAI,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAC;AACjC,IAAI,OAAO,GAAG,OAAO,CAAC;AACtB,QAAQ,OAAO,EAAE,CAAC,aAAa,CAAC;AAChC,QAAQ,MAAM,EAAE;AAChB,YAAY;AACZ,gBAAgB,EAAE,EAAE,SAAS;AAC7B,gBAAgB,KAAK,EAAE,OAAO;AAC9B,gBAAgB,SAAS,EAAE,KAAK;AAChC,gBAAgB,KAAK,EAAE,wBAAwB;AAC/C,gBAAgB,MAAM,EAAE,cAAc;AACtC,aAAa;AACb,YAAY;AACZ,gBAAgB,EAAE,EAAE,MAAM;AAC1B,gBAAgB,KAAK,EAAE,OAAO;AAC9B,gBAAgB,SAAS,EAAE,KAAK;AAChC,gBAAgB,KAAK,EAAE,iBAAiB;AACxC,gBAAgB,MAAM,EAAE,eAAe;AACvC,aAAa;AACb,SAAS;AACT,QAAQ,WAAW,EAAE;AACrB,YAAY,IAAI,EAAE,WAAW;AAC7B,YAAY,IAAI,EAAE,oEAAoE;AACtF,YAAY,IAAI,EAAE,oEAAoE;AACtF,YAAY,WAAW,EAAE,sBAAsB;AAC/C;AACA;AACA;AACA,SAAS;AACT,KAAK,EAAC;AACN,CAAC;AACD;AACA;AACA;AACA;AACA;AACO,eAAe,QAAQ,GAAG;AACjC,IAAI,MAAM,eAAe,GAAG,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;AAC1D,IAAI,OAAO,CAAC,GAAG,CAAC,eAAe,EAAC;AAChC;AACA;AACA;AACA;AACA,IAAI,OAAO,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC;AAC1C,CAAC;AACD;AACA;AACO,SAAS,UAAU,GAAG;AAC7B,IAAI,OAAO,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO;AACtC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;"}